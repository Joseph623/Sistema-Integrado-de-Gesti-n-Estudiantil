package PostgreSQL;

import Vista.Form;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author YAZID
 */
public class FormularioCiclosYPagos extends javax.swing.JFrame {

    public FormularioCiclosYPagos() {
        initComponents();
        cargarDatosTabla();
        configurarEventosTabla();
        setLocationRelativeTo(null);
        cargarEstudiantesDesdeMySQL();
    }

    private void cargarEstudiantesDesdeMySQL() {
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/proyectobd?useSSL=false&serverTimezone=UTC", "root", "1234");

            String query = "SELECT id, nombre FROM estudiantes";
            PreparedStatement stmt = conn.prepareStatement(query);
            ResultSet rs = stmt.executeQuery();

            jComboBox1.removeAllItems();

            while (rs.next()) {
                String item = rs.getString("id") + " - " + rs.getString("nombre");
                jComboBox1.addItem(item);
            }

            conn.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al cargar estudiantes desde MySQL: " + e.getMessage());
        }
    }

    private static Connection conectar() throws SQLException {
        ConexionSQL conexion = new ConexionSQL();
        conexion.conectar();
        Connection conn = conexion.getConnection();
        if (conn == null) {
            throw new SQLException("ConexiÃ³n no disponible.");
        }
        return conn;
    }

    private void cargarDatosTabla() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Usuario ID");
        modelo.addColumn("Monto");
        modelo.addColumn("Estado de Pago");

        try (Connection con = conectar()) {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT estudiante_id, monto, estado_pago FROM pagos");

            while (rs.next()) {
                modelo.addRow(new Object[]{
                    rs.getString("estudiante_id"),
                    rs.getDouble("monto"),
                    rs.getString("estado_pago")
                });
            }

            jTable1.setModel(modelo);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al cargar datos:" + e.getMessage());
        }
    }

    private void configurarEventosTabla() {
        if (jTable1 == null) {
            return;
        }

        jTable1.getSelectionModel().addListSelectionListener(event -> {
            if (!event.getValueIsAdjusting() && jTable1.getSelectedRow() != -1) {
                int fila = jTable1.getSelectedRow();

                if (fila >= 0 && jTable1.getRowCount() > fila) {
                    String id = String.valueOf(jTable1.getValueAt(fila, 0));
                    for (int i = 0; i < jComboBox1.getItemCount(); i++) {
                        if (jComboBox1.getItemAt(i).startsWith(id + " -")) {
                            jComboBox1.setSelectedIndex(i);
                            break;
                        }
                    }

                    txtMonto.setText(String.valueOf(jTable1.getValueAt(fila, 1)));
                    cmbEstadoPago.setSelectedItem(String.valueOf(jTable1.getValueAt(fila, 2)));
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtMonto = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cmbEstadoPago = new javax.swing.JComboBox<>();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnAgregar = new RSMaterialComponent.RSButtonMaterialIconDos();
        btnRegresar = new RSMaterialComponent.RSButtonMaterialIconDos();
        btnActualizar = new RSMaterialComponent.RSButtonMaterialIconDos();
        btnEliminar = new RSMaterialComponent.RSButtonMaterialIconDos();
        btnLimpiar = new RSMaterialComponent.RSButtonMaterialIconDos();
        jLabel2 = new javax.swing.JLabel();

        jScrollPane1.setViewportView(jTextPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 255));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Estudiante_ID");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, -1, 30));
        jPanel1.add(txtMonto, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 80, 180, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Monto");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 71, 30));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Estado de Pago");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 130, 30));

        cmbEstadoPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pagado", "Pendiente", "Deuda" }));
        cmbEstadoPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbEstadoPagoActionPerformed(evt);
            }
        });
        jPanel1.add(cmbEstadoPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 120, 180, 30));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 40, 180, 30));

        jScrollPane2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 204), 3, true));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Monto", "Estado de Pago", "Estudiante ID"
            }
        ));
        jTable1.setToolTipText("");
        jScrollPane2.setViewportView(jTable1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 630, 180));

        btnAgregar.setBackground(new java.awt.Color(102, 204, 255));
        btnAgregar.setText("Agregar");
        btnAgregar.setBackgroundHover(new java.awt.Color(225, 71, 97));
        btnAgregar.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        btnAgregar.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.MENU);
        btnAgregar.setInheritsPopupMenu(true);
        btnAgregar.setRound(25);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 140, 40));

        btnRegresar.setBackground(new java.awt.Color(0, 153, 204));
        btnRegresar.setText("Regresar");
        btnRegresar.setBackgroundHover(new java.awt.Color(225, 71, 97));
        btnRegresar.setEffectButton(RSMaterialComponent.RSButtonMaterialIconDos.EFFECTBUTTON.RAISED);
        btnRegresar.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        btnRegresar.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.HOME);
        btnRegresar.setRound(25);
        btnRegresar.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                btnRegresarAncestorMoved(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 430, 150, 50));

        btnActualizar.setBackground(new java.awt.Color(102, 204, 255));
        btnActualizar.setText("Actualizar");
        btnActualizar.setBackgroundHover(new java.awt.Color(225, 71, 97));
        btnActualizar.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        btnActualizar.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.MENU);
        btnActualizar.setInheritsPopupMenu(true);
        btnActualizar.setRound(25);
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, 140, 40));

        btnEliminar.setBackground(new java.awt.Color(102, 204, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.setBackgroundHover(new java.awt.Color(225, 71, 97));
        btnEliminar.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        btnEliminar.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.MENU);
        btnEliminar.setInheritsPopupMenu(true);
        btnEliminar.setRound(25);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 180, 140, 40));

        btnLimpiar.setBackground(new java.awt.Color(102, 204, 255));
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setBackgroundHover(new java.awt.Color(225, 71, 97));
        btnLimpiar.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        btnLimpiar.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.MENU);
        btnLimpiar.setInheritsPopupMenu(true);
        btnLimpiar.setRound(25);
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        jPanel1.add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 180, 140, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoInt.png"))); // NOI18N
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204), 4));
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 500));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbEstadoPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbEstadoPagoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbEstadoPagoActionPerformed

    private void limpiarCampos() {
        jComboBox1.setSelectedIndex(0);
        txtMonto.setText("");
        cmbEstadoPago.setSelectedIndex(0);
    }

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String idStr = jComboBox1.getSelectedItem().toString().split(" - ")[0];
        double monto = Double.parseDouble(txtMonto.getText());
        String estado = cmbEstadoPago.getSelectedItem().toString();

        try (Connection con = conectar()) {
            String insertPago = "INSERT INTO pagos(estudiante_id, monto, estado_pago) VALUES (?, ?, ?)";

            try (PreparedStatement ps = con.prepareStatement(insertPago)) {
                ps.setString(1, idStr);
                ps.setDouble(2, monto);
                ps.setString(3, estado);
                ps.executeUpdate();

                JOptionPane.showMessageDialog(this, "â Registro agregado correctamente");
                limpiarCampos();
                cargarDatosTabla();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "â Error al agregar: " + e.getMessage());
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "â Error de conexiÃ³n: " + e.getMessage());
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnRegresarAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_btnRegresarAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegresarAncestorMoved

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        Form fy = new Form();
        fy.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        String idStr = jComboBox1.getSelectedItem().toString().split(" - ")[0];
        double monto = Double.parseDouble(txtMonto.getText());
        String estado = cmbEstadoPago.getSelectedItem().toString();

        try (Connection con = conectar()) {
            String updatePago = "UPDATE pagos SET monto = ?, estado_pago = ? WHERE estudiante_id = ?";
            try (PreparedStatement ps = con.prepareStatement(updatePago)) {
                ps.setDouble(1, monto);
                ps.setString(2, estado);
                ps.setString(3, idStr);

                ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "Registro actualizado correctamente");
                limpiarCampos();
                cargarDatosTabla();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error al actualizar: " + e.getMessage());
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error de conexiÃ³n: " + e.getMessage());
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        String idStr = jComboBox1.getSelectedItem().toString().split(" - ")[0];

        int confirm = JOptionPane.showConfirmDialog(this, "Â¿EstÃ¡s seguro de eliminar este registro?", "Confirmar", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        try (Connection con = conectar()) {
            String deletePago = "DELETE FROM pagos WHERE estudiante_id = ?";
            try (PreparedStatement ps = con.prepareStatement(deletePago)) {
                ps.setString(1, idStr);
                ps.executeUpdate();

                JOptionPane.showMessageDialog(this, "Registro eliminado correctamente");
                limpiarCampos();
                cargarDatosTabla();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error al eliminar: " + e.getMessage());
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error de conexiÃ³n: " + e.getMessage());
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioCiclosYPagos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioCiclosYPagos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioCiclosYPagos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioCiclosYPagos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FormularioCiclosYPagos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private RSMaterialComponent.RSButtonMaterialIconDos btnActualizar;
    private RSMaterialComponent.RSButtonMaterialIconDos btnAgregar;
    private RSMaterialComponent.RSButtonMaterialIconDos btnEliminar;
    private RSMaterialComponent.RSButtonMaterialIconDos btnLimpiar;
    private RSMaterialComponent.RSButtonMaterialIconDos btnRegresar;
    private javax.swing.JComboBox<String> cmbEstadoPago;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextField txtMonto;
    // End of variables declaration//GEN-END:variables
}
