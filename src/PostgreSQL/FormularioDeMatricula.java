package PostgreSQL;

import Vista.Form;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author YAZID
 */
public class FormularioDeMatricula extends javax.swing.JFrame {

    public FormularioDeMatricula() {
        initComponents();
        cargarDatosTabla();
        configurarEventosTabla();
        setLocationRelativeTo(null);
        cargarEstudiantesDesdeMySQL();

    }

    private void cargarEstudiantesDesdeMySQL() {
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/proyectobd?useSSL=false&serverTimezone=UTC", "root", "1234");
            String query = "SELECT id, nombre FROM estudiantes";
            PreparedStatement stmt = conn.prepareStatement(query);
            ResultSet rs = stmt.executeQuery();

            cbEstudiantesMySQL.removeAllItems();
            while (rs.next()) {
                String item = rs.getString("id") + " - " + rs.getString("nombre");
                cbEstudiantesMySQL.addItem(item);
            }

            conn.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al cargar estudiantes desde MySQL: " + e.getMessage());
        }
    }

    private static Connection conectar() throws SQLException {
        ConexionSQL conexion = new ConexionSQL();
        conexion.conectar();
        return conexion.getConnection();
    }

    private void cargarDatosTabla() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Usuario ID");
        modelo.addColumn("Ciclo");
        modelo.addColumn("Fecha de Matricula");

        try (Connection con = conectar()) {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(
                    "SELECT estudiante_id, ciclo, fecha_matricula FROM matriculas");

            while (rs.next()) {
                modelo.addRow(new Object[]{
                    rs.getString("estudiante_id"),
                    rs.getString("ciclo"),
                    rs.getDate("fecha_matricula")
                });
            }

            jTable1.setModel(modelo);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, " Error al cargar datos: " + e.getMessage());
        }
    }

    private void configurarEventosTabla() {
        if (jTable1 == null) {
            return;
        }
        jTable1.getSelectionModel().addListSelectionListener(event -> {
            if (!event.getValueIsAdjusting() && jTable1.getSelectedRow() != -1) {
                int fila = jTable1.getSelectedRow();

                if (fila >= 0 && jTable1.getRowCount() > fila) {
                    String idSeleccionado = String.valueOf(jTable1.getValueAt(fila, 0));
                    for (int i = 0; i < cbEstudiantesMySQL.getItemCount(); i++) {
                        String item = cbEstudiantesMySQL.getItemAt(i);
                        if (item.startsWith(idSeleccionado + " -")) {
                            cbEstudiantesMySQL.setSelectedIndex(i);
                            break;
                        }
                    }

                    txtCiclo.setText(String.valueOf(jTable1.getValueAt(fila, 1)));
                    txtFechaMatricula.setText(String.valueOf(jTable1.getValueAt(fila, 2)));
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtCiclo = new javax.swing.JTextField();
        txtFechaMatricula = new javax.swing.JTextField();
        cbEstudiantesMySQL = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnEliminar = new RSMaterialComponent.RSButtonMaterialIconDos();
        btnAgregar = new RSMaterialComponent.RSButtonMaterialIconDos();
        btnActualizar = new RSMaterialComponent.RSButtonMaterialIconDos();
        btnLimpiar = new RSMaterialComponent.RSButtonMaterialIconDos();
        btnRegresar = new RSMaterialComponent.RSButtonMaterialIconDos();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Estudiante_ID");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, 120, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Ciclo");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, 98, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Fecha de Matricula");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 140, 30));
        jPanel1.add(txtCiclo, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 70, 220, 30));
        jPanel1.add(txtFechaMatricula, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 120, 220, 30));

        cbEstudiantesMySQL.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(cbEstudiantesMySQL, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, 220, 30));

        jScrollPane1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 204), 3, true));
        jScrollPane1.setToolTipText("Monto, Estadp de Pago");
        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Usuario ID", "Ciclo", "Fecha de Matricula"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setToolTipText("");
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 630, 190));

        btnEliminar.setBackground(new java.awt.Color(102, 204, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.setBackgroundHover(new java.awt.Color(225, 71, 97));
        btnEliminar.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        btnEliminar.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.MENU);
        btnEliminar.setInheritsPopupMenu(true);
        btnEliminar.setRound(25);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 170, 140, 40));

        btnAgregar.setBackground(new java.awt.Color(102, 204, 255));
        btnAgregar.setText("Agregar");
        btnAgregar.setBackgroundHover(new java.awt.Color(225, 71, 97));
        btnAgregar.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        btnAgregar.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.MENU);
        btnAgregar.setInheritsPopupMenu(true);
        btnAgregar.setRound(25);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 140, 40));

        btnActualizar.setBackground(new java.awt.Color(102, 204, 255));
        btnActualizar.setText("Actualizar");
        btnActualizar.setBackgroundHover(new java.awt.Color(225, 71, 97));
        btnActualizar.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        btnActualizar.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.MENU);
        btnActualizar.setInheritsPopupMenu(true);
        btnActualizar.setRound(25);
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, 140, 40));

        btnLimpiar.setBackground(new java.awt.Color(102, 204, 255));
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setBackgroundHover(new java.awt.Color(225, 71, 97));
        btnLimpiar.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        btnLimpiar.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.MENU);
        btnLimpiar.setInheritsPopupMenu(true);
        btnLimpiar.setRound(25);
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        jPanel1.add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 170, 140, 40));

        btnRegresar.setBackground(new java.awt.Color(0, 153, 204));
        btnRegresar.setText("Regresar");
        btnRegresar.setBackgroundHover(new java.awt.Color(225, 71, 97));
        btnRegresar.setEffectButton(RSMaterialComponent.RSButtonMaterialIconDos.EFFECTBUTTON.RAISED);
        btnRegresar.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        btnRegresar.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.HOME);
        btnRegresar.setRound(25);
        btnRegresar.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                btnRegresarAncestorMoved(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 430, 150, 50));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoInt.png"))); // NOI18N
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204), 4));
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 500));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        String idStr = cbEstudiantesMySQL.getSelectedItem().toString().split(" - ")[0];

        try (Connection con = conectar()) {
            String deleteMatricula = "DELETE FROM matriculas WHERE estudiante_id = ?";
            try (PreparedStatement ps1 = con.prepareStatement(deleteMatricula)) {
                ps1.setString(1, idStr); 
                ps1.executeUpdate();

                JOptionPane.showMessageDialog(this, "Registro eliminado correctamente");
                limpiarCampos();
                cargarDatosTabla();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error al eliminar: " + e.getMessage());
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error de conexión: " + e.getMessage());
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String idStr = cbEstudiantesMySQL.getSelectedItem().toString().split(" - ")[0];
        String ciclo = txtCiclo.getText();
        String fecha = txtFechaMatricula.getText();

        try (Connection con = conectar()) {
            String insertMatricula = "INSERT INTO matriculas(estudiante_id, ciclo, fecha_matricula) VALUES (?, ?, ?)";

            try (PreparedStatement ps1 = con.prepareStatement(insertMatricula)) {
                ps1.setString(1, idStr);
                ps1.setString(2, ciclo);
                ps1.setDate(3, Date.valueOf(fecha));
                ps1.executeUpdate();

                JOptionPane.showMessageDialog(this, "Registro agregado correctamente");
                limpiarCampos();
                cargarDatosTabla();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error al agregar: " + e.getMessage());
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error de conexión: " + e.getMessage());
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        String idStr = cbEstudiantesMySQL.getSelectedItem().toString().split(" - ")[0];
        String ciclo = txtCiclo.getText();
        String fecha = txtFechaMatricula.getText();

        try (Connection con = conectar()) {
            String updateMatricula = "UPDATE matriculas SET ciclo = ?, fecha_matricula = ? WHERE estudiante_id = ?";
            try (PreparedStatement ps1 = con.prepareStatement(updateMatricula)) {
                ps1.setString(1, ciclo);
                ps1.setDate(2, Date.valueOf(fecha));
                ps1.setString(3, idStr);

                ps1.executeUpdate();

                JOptionPane.showMessageDialog(this, "Registro actualizado correctamente");
                limpiarCampos();
                cargarDatosTabla();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error al actualizar: " + e.getMessage());
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error de conexión: " + e.getMessage());
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnRegresarAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_btnRegresarAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegresarAncestorMoved

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        Form fy = new Form();
        fy.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void limpiarCampos() {
        txtCiclo.setText("");
        txtFechaMatricula.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioDeMatricula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioDeMatricula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioDeMatricula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioDeMatricula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FormularioDeMatricula().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private RSMaterialComponent.RSButtonMaterialIconDos btnActualizar;
    private RSMaterialComponent.RSButtonMaterialIconDos btnAgregar;
    private RSMaterialComponent.RSButtonMaterialIconDos btnEliminar;
    private RSMaterialComponent.RSButtonMaterialIconDos btnLimpiar;
    private RSMaterialComponent.RSButtonMaterialIconDos btnRegresar;
    private javax.swing.JComboBox<String> cbEstudiantesMySQL;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtCiclo;
    private javax.swing.JTextField txtFechaMatricula;
    // End of variables declaration//GEN-END:variables
}
